{"version":3,"sources":["webpack://YytConnect/webpack/universalModuleDefinition","webpack://YytConnect/webpack/bootstrap","webpack://YytConnect/./index.js","webpack://YytConnect/./stream.js","webpack://YytConnect/./userOpera.js","webpack://YytConnect/./remoteStream.js","webpack://YytConnect/./yytConnect.js","webpack://YytConnect/./YytInit.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Stream","connect","streamName","this","mediaStream","MediaStream","audioTrack","videoTrack","audioSender","videoSender","undefined","id","closeOrOpen","methodName","enabled","params","Id","createMsgWebrtcMethod","result","that","Promise","resolve","reject","constraints","video","audio","navigator","mediaDevices","getUserMedia","then","sendStream","getTracks","forEach","track","kind","removeTrack","addTrack","catch","e","width","height","fps","exact","frameRate","getDisplayMedia","tags","async","code","data","Error","JSON","stringify","errMsg","uids","console","log","Name","localConnection","offer","getOffer","sdp","parse","setSdp","setTimeout","changeStreamName","close","dispose","stop","UserOpera","tagsName","0","1","createMsgTags","callback","userId","createMsgUserMethod","sendData","receiver","2","RemoteStream","streamMap","Map","availableSize","streamData","streamId","stream","streams","has","set","item","onTrack","info","stopPullStream","streamMessage","3","4","delete","uid","size","addTransceiver","5","url","msgCacheMap","userOpera","remoteStream","busMsg","tagMsg","S4","Math","random","toString","substring","RTCPeerConnection","sendChannel","createDataChannel","listen","_connect","createOffer","setLocalDescription","des","setRemoteDescription","uuid","guid","Tags","send","UserMethod","webrtcMethod","onopen","open","onclose","onmessage","String","fromCharCode","apply","Uint8Array","decodedString","decodeURIComponent","escape","msgType","source","message","busMessage","msgId","ontrack","_ontrack","desc","httpRequest","XMLHttpRequest","setRequestHeader","obj","onreadystatechange","status","readyState","json","responseText","onErr","times","Date","Format","datas","fmt","getMonth","getDate","getHours","getMinutes","getSeconds","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","NewConnect"],"mappings":"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","file":"yyt.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"YytConnect\"] = factory();\n\telse\n\t\troot[\"YytConnect\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require('./YytInit');","\n\n\nexport default class Stream{\n\n    constructor(connect, streamName) {\n        this.connect = connect\n        this.mediaStream = new MediaStream();\n        this.audioTrack = null\n        this.videoTrack = null\n        this.audioSender = null\n        this.videoSender = null\n        if(streamName === undefined){\n            this.streamName = this.mediaStream.id\n        }else{\n            this.streamName = streamName\n        }\n        \n    }\n\n    Id(){\n        return this.mediaStream.id\n    }\n\n    Name(){\n        return this.streamName\n    }\n\n    MediaStream(){\n        return this.mediaStream\n    }\n\n    changeVideoStatus(closeOrOpen){\n        if (this.videoTrack != null){\n            let methodName = \"\"\n            if (!closeOrOpen){\n                methodName = \"PauseStreamToUser\"\n                this.videoTrack.enabled = false\n            }else {\n                methodName = \"ResumeStreamToUser\"\n                this.videoTrack.enabled = true\n            }\n            const params = {\n                \"0\": this.Id(),\n                \"1\": \"video\",\n                \"2\": \"this\"\n            }\n            this.connect.createMsgWebrtcMethod(methodName, params, (result) =>{})\n        }\n    }\n\n    changeAudioStatus(closeOrOpen){\n        if (this.audioTrack != null){\n            let methodName = \"\"\n            if (!closeOrOpen){\n                methodName = \"PauseStreamToUser\"\n                this.audioTrack.enabled = false\n            }else {\n                methodName = \"ResumeStreamToUser\"\n                this.audioTrack.enabled = true\n            }\n            const params = {\n                \"0\": this.Id(),\n                \"1\": \"audio\",\n                \"2\": \"this\"\n            }\n            this.connect.createMsgWebrtcMethod(methodName, params, (result) =>{})\n        }\n    }\n\n    createAudio(){\n        const that = this\n        const promise = new Promise((resolve, reject) =>{\n            if(that.audioTrack == null){\n                const constraints = {\n                    video: false,\n                    audio: true\n                };\n                navigator.mediaDevices.getUserMedia(constraints)\n                    .then((sendStream) =>{\n                        sendStream.getTracks().forEach((track) => {\n                            if(track.kind == \"audio\"){\n                                that.audioTrack = track\n                            }\n                        });\n                        sendStream.removeTrack(that.audioTrack)\n                        that.mediaStream.addTrack(that.audioTrack)\n                        resolve()\n                    })\n                    .catch(e => {\n                        reject(e)\n                    });\n            }else{\n                reject()\n            }\n        })\n        return promise\n        \n    }\n\n    createVideo(width, height, fps){\n        const that = this\n        const promise = new Promise((resolve, reject) =>{\n            if(that.videoTrack == null){\n                const constraints = {\n                    video: {width: {exact: width}, height: {exact: height}, frameRate: fps},\n                    audio: false\n                };\n                navigator.mediaDevices.getUserMedia(constraints)\n                    .then((sendStream) =>{\n                        sendStream.getTracks().forEach((track) => {\n                            if(track.kind == \"video\"){\n                                that.videoTrack = track\n                            }\n                        });\n                        sendStream.removeTrack(that.videoTrack)\n                        that.mediaStream.addTrack(that.videoTrack)\n                        resolve()\n                    })\n                    .catch(e => {\n                        reject(e)\n                    });\n            }else{\n                reject()\n            }\n        })\n        return promise\n       \n    }\n\n    createScreen(width, height, fps){\n        const that = this\n        const promise = new Promise((resolve, reject) =>{\n            if(that.videoTrack == null){\n                const constraints = {video: { width: width, height: height, frameRate: fps}}\n                navigator.mediaDevices.getDisplayMedia(constraints)\n                    .then((sendStream) =>{\n                        sendStream.getTracks().forEach((track) => {\n                            if(track.kind == \"video\"){\n                                that.videoTrack = track\n                            }\n                        });\n                        sendStream.removeTrack(that.videoTrack)\n                        that.mediaStream.addTrack(that.videoTrack)\n                        resolve()\n                    })\n                    .catch(e => {\n                        reject(e)\n                    });\n            }else{\n                reject()\n            }\n        })\n        return promise\n    }\n\n    sendStreamToTag(...tags){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const params = {\n                \"0\": tags,\n                \"1\": that.Id(),\n                \"2\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"SendStreamToTag\", params, (result) =>{\n                if(result.code == 200){\n                    resolve({\n                        code: result.code,\n                        data: result.data,\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    getStreamInfo(){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const params = {\n                \"0\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"GetStreamInfo\", params, (result) =>{\n                if(result.code == 200){\n                    resolve({\n                        code: result.code,\n                        data: result.data,\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    getUserStreamInfo(...uids){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const params = {\n                \"0\": uids,\n                \"1\": \"this\",\n            }\n            that.connect.createMsgWebrtcMethod(\"GetUserStreamInfo\", params, (result) =>{\n                console.log('getUserStreamInfo', result)\n                if(result.code == 200){\n                    resolve({\n                        code: result.code,\n                        data: result.data,\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    sendStreamStopToTag(...tags){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const params = {\n                \"0\": tags,\n                \"1\": that.Id(),\n                \"2\": that.Name(),\n                \"3\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"SendStreamStopToTag\", params, (result) =>{\n                if(result.code == 200){\n                    resolve({\n                        code: result.code,\n                        data: result.data,\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    changeStreamName(streamName){\n        this.streamName = streamName\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const params = {\n                \"0\": that.Id(),\n                \"1\": that.Name(),\n                \"2\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"ChangeStreamName\", params, (result) =>{\n                if(result.code == 200){\n                    resolve({\n                        code: result.code,\n                        data: result.data,\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    push(){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const localConnection = that.connect.localConnection\n            if(that.audioTrack != null){\n                that.audioSender = localConnection.addTrack(that.audioTrack, that.mediaStream)\n            }\n            if(that.videoTrack != null){\n                that.videoSender = localConnection.addTrack(that.videoTrack, that.mediaStream)\n            }\n            const offer = await this.connect.getOffer()\n            const params = {\n                \"0\": JSON.stringify(offer),\n                \"1\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"UpdateSdp\", params, (result) =>{\n                if(result.code == 200){\n                    const sdp = JSON.parse(result.data)\n                    that.connect.setSdp(sdp).then(()=>{\n                        setTimeout(()=>{\n                            try{\n                            \n                                let data = that.changeStreamName(that.Name())\n                                resolve(data)\n                            }catch(e){\n                                reject(e)\n                            }\n                        }, 200)\n                    \n                    }).catch(e=>{\n                        reject(e)\n                    })\n                    \n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    stopPush(){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const localConnection = that.connect.localConnection\n            if(that.audioSender != null){\n                localConnection.removeTrack(that.audioSender)\n            }\n            if(that.videoSender != null){\n                localConnection.removeTrack(that.videoSender)\n            }\n            const offer = await this.connect.getOffer()\n            const params = {\n                \"0\": JSON.stringify(offer),\n                \"1\": \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"UpdateSdp\", params, (result) =>{\n                if(result.code == 200){\n                    const sdp = JSON.parse(result.data)\n                    that.connect.setSdp(sdp)\n                    resolve({\n                        code: result.code\n                    })\n                }else{\n                    reject(new Error(JSON.stringify({\n                        code: result.code,\n                        errMsg: result.errMsg\n                    })))\n                }\n            })\n        })\n        return promise\n    }\n\n    // close(){\n    //     if(this.audioTrack != null){\n    //         this.mediaStream.removeTrack(this.audioTrack)\n    //         this.audioTrack.dispose()\n    //     }\n    //     if(this.videoTrack != null){\n    //         this.mediaStream.removeTrack(this.videoTrack)\n    //         this.videoTrack.dispose()\n    //     }\n    //     this.mediaStream.dispose();\n    // }\n\n    close(){\n        if(this.audioTrack != null){\n            this.mediaStream.removeTrack(this.audioTrack)\n            try {\n                this.audioTrack.close()\n                this.audioTrack.dispose()\n            } catch (e) {\n                console.log('停止音频错误', e)\n            }\n        }\n        if(this.videoTrack != null){\n            this.mediaStream.removeTrack(this.videoTrack)\n            try {\n                this.videoTrack.stop()\n                this.videoTrack.dispose()\n            } catch (e) {\n                console.log('停止视频错误', e)\n            }\n            // this.videoTrack.dispose()\n        }\n        try {\n            this.mediaStream.dispose();\n        } catch (e) {\n            console.log('停止mediaStream错误', e)\n        }\n    }\n}","\n\nexport default class UserOpera{\n\n    constructor(connect) {\n        this.connect = connect\n    }\n\n    callback(result, resolve, reject){\n        if(result.code == 200){\n            resolve({\n                code: 200,\n                data: result.data\n            })\n        }else{\n            reject(result)\n        }\n    }\n\n    AddTagsUser(...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"AddTagsUser\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    DelTagsUser(...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"DelTagsUser\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    CheckUserInTag(...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"CheckUserInTag\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    CheckOtherUserInTag(userId, ...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: userId\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"CheckOtherUserInTag\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    CheckTagIsCreate( ...tagsName){\n        const that = this\n        const params = {\n            0: tagsName\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"CheckTagIsCreate\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    ClearTags( ...tagsName){\n        const that = this\n        const params = {\n            0: tagsName\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"ClearTags\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    TagsInUsers( ...tagsName){\n        const that = this\n        const params = {\n            0: tagsName\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"TagsInUsers\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    TagsSetData(data, ...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: data\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"TagsSetData\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    TagsGetData(...tagsName){\n        const that = this\n        const params = {\n            0: tagsName\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgTags(\"TagsGetData\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    Data(){\n        const that = this\n        const params = {\n            0: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgUserMethod(\"Data\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    InitUserBean(data){\n        const that = this\n        const params = {\n            0: data,\n            1: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgUserMethod(\"InitUserBean\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    UserData(userId){\n        const that = this\n        const params = {\n            0: userId\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgUserMethod(\"UserData\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    SendMessageBus(sendData,...receiver){\n        const that = this\n        const params = {\n            0: receiver,\n            1: sendData,\n            2: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgUserMethod(\"SendMessageBus\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n    SendMessageTagBus(sendData,...tagsName){\n        const that = this\n        const params = {\n            0: tagsName,\n            1: sendData,\n            2: \"this\"\n        }\n        const promise = new Promise((resolve, reject) =>{\n            that.connect.createMsgUserMethod(\"SendMessageTagBus\", params, (result) => {\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n}","export default class RemoteStream{\n\n    constructor(connect) {\n        this.connect = connect\n        this.streamMap = new Map()\n        this.availableSize = 0;\n    }\n\n    streamMessage(streamData){\n\n    }\n\n    onTrack(track, streamId, stream){\n        \n    }\n\n    removeTrack(track, streamId, stream){\n        \n    }\n\n    _ontrack(e){\n        const that = this\n        e.streams.forEach(stream => {\n            if(!that.streamMap.has(stream.id)){\n                that.streamMap.set(stream.id, stream)\n                const tracks = stream.getTracks()\n                tracks.forEach(item => {\n                    that.onTrack(item, stream.id, stream)\n                })\n            }\n        });\n    }\n\n    message(streamData){\n        if(streamData.info == 7){\n            this.stopPullStream(streamData.data)\n        }\n        this.streamMessage(streamData)\n    }\n\n    callback(result, resolve, reject){\n        if(result.code == 200){\n            resolve(result)\n        }else{\n            reject(result)\n        }\n    }\n\n    stopPullStream(streamId){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            const offer = await this.connect.getOffer()\n            if(offer == null){\n                reject(new Error(\"offer fail\"))\n            }\n            const params = {\n                0: streamId,\n                1: true,\n                2: true,\n                3: JSON.stringify(offer),\n                4: \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"StopPullStream\", params, (result) => {\n                if(result.code == 200){\n                    that.connect.setSdp(JSON.parse(result.data))\n                    const stream = that.streamMap.get(streamId)\n                    if(stream != null){\n                        that.streamMap.delete(streamId)\n                        const tracks = stream.getTracks()\n                        tracks.forEach(item => {\n                            that.removeTrack(item, stream.id)\n                        })\n                    }\n                }\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n    pullStream(uid, streamId){\n        const that = this\n        const promise = new Promise(async (resolve, reject) =>{\n            if(that.availableSize <= that.streamMap.size){\n                that.connect.localConnection.addTransceiver(\"video\");\n                that.connect.localConnection.addTransceiver(\"audio\");\n                that.availableSize++\n            }\n            const offer = await that.connect.getOffer()\n            if(offer == null){\n                reject(new Error(\"offer fail\"))\n            }\n            const params = {\n                0: uid,\n                1: streamId,\n                2: true,\n                3: true,\n                4: JSON.stringify(offer),\n                5: \"this\"\n            }\n            that.connect.createMsgWebrtcMethod(\"PullStream\", params, (result) => {\n                if(result.code == 200){\n                    that.connect.setSdp(JSON.parse(result.data))\n                }\n                that.callback(result, resolve, reject)\n            })\n        })\n        return promise\n    }\n\n}","import Stream from \"./stream\";\nimport UserOpera from \"./userOpera\";\nimport RemoteStream from \"./remoteStream\";\n\nexport default class YytConnect{\n\n    constructor(id) {\n        this.id = id\n        this.url = 'http://159.75.43.185:8702/rtc/connect'\n        this.msgCacheMap = new Map()\n        this.userOpera = new UserOpera(this)\n        this.remoteStream = new RemoteStream(this)\n    }\n\n    onErr(e){\n\n    }\n\n    open(){\n\n    }\n\n    close(){\n\n    }\n\n    busMessage(busMsg){\n\n    }\n\n    message(tagMsg){\n\n    }\n\n    guid() {\n        function S4() {\n            return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n        }\n        return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n    }\n\n\n    async connect(){\n        const localConnection = new RTCPeerConnection();\n        const sendChannel = localConnection.createDataChannel(\"yytserver\"+this.id);\n        this.listen(localConnection, sendChannel)\n        const offer = await this.getOffer()\n        this._connect(offer)\n    }\n\n    async getOffer(){\n        const offer = await this.localConnection.createOffer()\n        await this.localConnection.setLocalDescription(offer)\n        return offer\n    }\n\n    async setSdp(des){\n       return this.localConnection.setRemoteDescription(des)\n    }\n\n    createMsgTags(methodName, params, callback){\n        const uuid = this.guid();\n        this.msgCacheMap.set(uuid, callback)\n        const data = this.Tags(uuid, methodName, params)\n        this.sendChannel.send(data)\n    }\n\n    createMsgUserMethod(methodName, params, callback){\n        const uuid = this.guid();\n        this.msgCacheMap.set(uuid, callback)\n        const data = this.UserMethod(uuid, methodName, params)\n        this.sendChannel.send(data)\n    }\n\n    createMsgWebrtcMethod(methodName, params, callback){\n        const uuid = this.guid();\n        this.msgCacheMap.set(uuid, callback)\n        const data = this.webrtcMethod(uuid, methodName, params)\n        this.sendChannel.send(data)\n    }\n\n\n\n    listen(localConnection, sendChannel){\n        sendChannel.onopen = ()=>{\n            if(this.open){\n                this.open()\n            }\n            \n        }\n        sendChannel.onclose = ()=>{\n            if(this.onclose){\n                this.onclose()\n            }\n        }\n        sendChannel.onmessage = async e => {\n            const data = String.fromCharCode.apply(null, new Uint8Array(e.data));\n            const decodedString = decodeURIComponent(escape(data));\n            const parse = JSON.parse(decodedString);\n            if(parse.msgType.toString() === \"2\"){\n                const callback = this.msgCacheMap.get(parse.msgId.toString())\n                if(callback != null){\n                    this.msgCacheMap.delete(parse.msgId.toString())\n                    callback(parse.data)\n                }\n                return\n            }\n            if(parse.msgType.toString() === \"1\"){\n                if(parse.data.source.toString() === \"webrtcEngine\"){ \n                    this.remoteStream.message(parse.data.data)\n                }\n                if(parse.data.source.toString() === \"tag\"){\n                    this.message(parse.data.data)\n                }\n                return\n            }\n            if(parse.msgType.toString() === \"3\"){\n                this.busMessage(parse.data)\n                return\n            }\n        }\n\n        localConnection.ontrack = (e)=>{\n           this.remoteStream._ontrack(e)\n        };\n        this.sendChannel = sendChannel\n        this.localConnection = localConnection\n    }\n\n    _connect(desc){\n        const url = this.url;\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open('POST', url, true);\n        httpRequest.setRequestHeader(\"Content-type\", \"application/json\");\n        const obj = {\n            \"id\": this.id,\n            \"sdp\": JSON.stringify(desc)\n        };\n        httpRequest.send(JSON.stringify(obj));\n        httpRequest.onreadystatechange = () => {\n            if (httpRequest.status === 200 && httpRequest.readyState == 3) {\n                const json = httpRequest.responseText;\n                    const obj = JSON.parse(json);\n                    if (obj.code === \"200\") {\n                        const sdp = JSON.parse(obj.data);\n                        this.setSdp(sdp)\n                    }else{\n                        this.onErr(new Error(obj))\n                    }\n            }else{\n                this.onErr(new Error(obj))\n            }\n        };\n    }\n\n    close(){\n        this.localConnection.close()\n        this.localConnection = null\n        this.sendChannel = null\n    }\n\n\n    createStream(streamName){\n        return new Stream(this, streamName)\n    }\n\n    UserOpera(){\n        return this.userOpera\n    }\n\n    RemoteStream(){\n        return this.remoteStream\n    }\n\n    Tags(uuid, methodName, params){\n        const times = new Date().Format(\"yyyy-MM-dd HH:mm:ss\");\n        let datas = {\n            \"data\":{\n                \"clazz\":\"Tags\",\n                \"method\":methodName,\n                \"params\":params,\n                \"time\":times,\n                \"timeOut\":10\n            },\n            \"msgId\": uuid,\n            \"msgType\": 2,\n            \"time\":times,\n            \"version\":0\n        };\n        return JSON.stringify(datas)\n    }\n    \n    UserMethod(uuid, methodName, params){\n        const times = new Date().Format(\"yyyy-MM-dd HH:mm:ss\");\n        let datas = {\n            \"data\":{\n                \"clazz\":\"UserMethod\",\n                \"method\":methodName,\n                \"params\":params,\n                \"time\":times,\n                \"timeOut\":10\n            },\n            \"msgId\": uuid,\n            \"msgType\": 2,\n            \"time\":times,\n            \"version\":0\n        };\n        return JSON.stringify(datas)\n    }\n    \n    webrtcMethod(uuid, methodName, params){\n        const times = new Date().Format(\"yyyy-MM-dd HH:mm:ss\");\n        const datas = {\n            \"data\":{\n                \"clazz\":\"WebrtcMethod\",\n                \"method\": methodName,\n                \"params\":params,\n                \"time\":times,\n                \"timeOut\":10\n            },\n            \"msgId\":uuid,\n            \"msgType\":2,\n            \"time\":times,\n            \"version\":0\n        };\n        return JSON.stringify(datas)\n    }\n\n}","\nimport YytConnect from './yytConnect';\n\n\nfunction NewConnect(id){\n    return new YytConnect(id)\n}\n\nDate.prototype.Format = function(fmt)\n{ \n    var o = {\n        \"M+\" : this.getMonth()+1, //月份\n        \"d+\" : this.getDate(), //日\n        \"h+\" : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时\n        \"H+\" : this.getHours(), //小时\n        \"m+\" : this.getMinutes(), //分\n        \"s+\" : this.getSeconds(), //秒\n        \"q+\" : Math.floor((this.getMonth()+3)/3), //季度\n        \"S\" : this.getMilliseconds() //毫秒\n    };\n    if(/(y+)/.test(fmt))\n        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));\n    for(var k in o)\n        if(new RegExp(\"(\"+ k +\")\").test(fmt))\n        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n    return fmt;\n} \n\nwindow.NewConnect = NewConnect"],"sourceRoot":""}